<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--配置 session 管理-->
        <property name="sessionManager" ref="sessionManager"/>
        <!--配置 记住我-->
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <!-- 配置多个Realm的登录认证 -->
        <property name="authenticator" ref="authenticator"/>
        <!-- 配置多个Realm的权限认证 -->
        <property name="authorizer" ref="authorizer"/>
    </bean>

    <!--配置多个 realm 的权限权限认证-->
    <bean id="authorizer" class="org.apache.shiro.authz.ModularRealmAuthorizer">
        <property name="realms">
            <list>
                <!--这个实现权限匹配的方法-->
                <ref bean="myRealm"/>
                <!--这个没有实现-->
                <!--<ref bean="otherRealm"/>-->
            </list>
        </property>
    </bean>

    <!-- 配置多个Realm -->
    <bean id="authenticator" class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">

        <!--验证的时候，是用迭代器，所以可以认为验证的顺序就是这个 list 的顺序-->
        <property name="realms">
            <list>
                <!--<ref bean="otherRealm"/>-->
                <ref bean="myRealm"/>
            </list>
        </property>
        <property name="authenticationStrategy">

            <!--所有 realm 认证通过才算登录成功-->
            <!--<bean id="authenticationStrategy" class="org.apache.shiro.authc.pam.AllSuccessfulStrategy"/>-->
            <!--验证某个 realm 成功后直接返回，不会验证后面的 realm 了-->
            <!--<bean id="authenticationStrategy" class="org.apache.shiro.authc.pam.FirstSuccessfulStrategy"/>-->
            <!--所有的 realm 都会验证，其中一个成功，也会继续验证后面的 realm，最后返回成功-->
            <bean id="authenticationStrategy" class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy"/>
        </property>
    </bean>

    <!--自定义 MyRealm，登录的认证入口 ,需要继承AuthorizingRealm，项目中会体现-->
    <bean id="myRealm" class="com.rbac.shiro.MyRealm">
        <!-- 配置密码匹配器 -->
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <!-- 加密算法为SHA-256 -->
                <property name="hashAlgorithmName" value="SHA-256"/>
                <!-- 加密迭代次数 -->
                <property name="hashIterations" value="1024"/>
                <!--是否存储散列后的密码为16进制，为 true：.toHex()，为 false：.toBase64()-->
                <property name="storedCredentialsHexEncoded" value="false"/>
            </bean>
        </property>
    </bean>
    <!--自定义的第二个 realm-->
    <!--<bean id="otherRealm" class="com.rbac.shiro.OtherRealm"/>-->


    <!--rememberMeManager管理 配置-->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie">
            <bean class="org.apache.shiro.web.servlet.SimpleCookie">
                <!--设置超时时间 单位 秒，一天=86400-->
                <constructor-arg value="shiro-cookie"/>
                <property name="maxAge" value="86400"/>
                <property name="httpOnly" value="true"/>
            </bean>
        </property>
    </bean>

    <!--session管理 配置-->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!--session 过期时间 单位 毫秒，2400000=40min-->
        <property name="globalSessionTimeout" value="2400000"/>

        <!--有需要可以自行配置-->
        <!--<property name="cacheManager" ref="xxxx"></property>-->
        <!--有需要可以自行配置-->
        <!--<property name="sessionDAO" ref="xxx"></property>-->
    </bean>

    <!--shiro 请求拦截器，这里的 bean id 一定要对应 web.xml 中的filter-name，否则找不到这个拦截器-->
    <bean id="shiroFilter" class="com.rbac.shiro.MyShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!--登录地址-->
        <property name="loginUrl" value="/user/login"/>
        <!--登录成功跳转的地址-->
        <property name="successUrl" value="/user/getStatusInfo"/>
        <!--权限认证失败跳转的地址-->
        <property name="unauthorizedUrl" value="/user/unAuthorized"/>
        <!--需要权限拦截的路径-->
        <property name="filterChainDefinitions" value=""/>
    </bean>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 ，不明觉厉，没有深究-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>